<?xml version="1.0" encoding="UTF-8"?>
 
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9
                  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

    <changeSet id="20190305-01" author="ball">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                select count(*) from global_property where property_value like '%sierra leone%' and property ='layout.address.format';
            </sqlCheck>
        </preConditions>
        <comment>
            Second-time deletion of Sierra Leone address hierarchy so we can repopulate it with the correct levels.
            (Precondition is so that it's only run in Sierra Leone)
        </comment>
        <sql>
            set foreign_key_checks = 0;
            delete from address_hierarchy_address_to_entry_map;
            delete from address_hierarchy_entry;
            delete from address_hierarchy_level;
            set foreign_key_checks = 1;
        </sql>

    </changeSet>

    <changeSet id="20190305-02" author="ball">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                select count(*) from global_property where property_value like '%sierra leone%' and property ='layout.address.format';
            </sqlCheck>
        </preConditions>
        <comment>
            Third-time deletion of Sierra Leone address hierarchy so we can repopulate it with the correct levels.
            (Precondition is so that it's only run in Sierra Leone)
        </comment>
        <sql>
            set foreign_key_checks = 0;
            delete from address_hierarchy_address_to_entry_map;
            delete from address_hierarchy_entry;
            delete from address_hierarchy_level;
            set foreign_key_checks = 1;
        </sql>

    </changeSet>

    <changeSet id="20180320-migrate-mch-obs-to-diagnoses" author="ball">
        <comment>
            UHM-3757 Migrate (prenatal followup) danger signs to diagnoses
        </comment>
        <sql>
            -- ANC followup (create a new diagnosis order obs)
            insert into obs
                (person_id, concept_id, value_coded, encounter_id, obs_datetime, location_id,
                 obs_group_id, comments, creator, date_created, uuid)
            select person_id,
                   (select concept_id from concept_name
                     where name like 'Diagnosis order' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   (select concept_id from concept_name
                     where name like 'Secondary' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   encounter_id, obs_datetime, location_id, obs_group_id, 'anc inserted secondary order', creator, now(), uuid()
              from obs
             where concept_id =
                (select concept_id from concept_name
                  where name like 'Sign/Symptom name' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and voided = 0
               and encounter_id IN
                      (select encounter_id from encounter
                        where encounter_type =
                                (select encounter_type_id from encounter_type where name like 'ANC Followup'));

            -- ANC followup (change the concept for the diagnosis)
            UPDATE obs
            set concept_id =
                  (select concept_id from concept_name
                    where name like 'Diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0),
                comments = (select Concat('anc followup diagnosis updated ',sysdate()) from dual)
            where concept_id =
                    (select concept_id from concept_name
                      where name like 'Sign/Symptom name' and locale = 'en' and locale_preferred = 1 and voided = 0)
              and voided = 0
              and encounter_id IN
                    (select encounter_id from encounter
                      where encounter_type =
                                (select encounter_type_id from encounter_type where name like 'ANC Followup'));

            -- ANC followup (change the obsgroup for the diagnosis)
            UPDATE obs
            set concept_id =
                    (select concept_id from concept_name
                      where name like 'Visit Diagnoses' and locale = 'en' and locale_preferred = 1 and voided = 0),
                comments = (select Concat('anc followup diagnosis obsgroup updated ',sysdate()) from dual)
            where concept_id =
                    (select concept_id from concept_name
                      where name like 'Signs and symptoms' and locale = 'en' and locale_preferred = 1 and voided = 0)
              and voided = 0
              and encounter_id IN
                    (select encounter_id from encounter
                      where encounter_type =
                                (select encounter_type_id from encounter_type where name like 'ANC Followup'));
        </sql>

    </changeSet>

    <changeSet id="20180321-migrate-delivery-findings-to-diagnoses" author="ball">
        <comment>
            UHM-3757 Migrate (delivery) findings to diagnoses
        </comment>
        <sql>
            -- Delivery (create obsgroup and migrate data)
            drop table if exists temp_delivery;
            create table temp_delivery (
                id INT not null auto_increment primary key,
                encounter_id int(11) not NULL,
                person_id int(11) not NULL,
                location_id int(11) not NULL,
                complication_obs_id int(11) not NULL,
                obs_group_id int(11) default NULL,
                obs_datetime datetime default NULL,
                creator int(11) not NULL
            );

            -- Add data to temporary table
            insert into temp_delivery
                (complication_obs_id, encounter_id, person_id, location_id, obs_datetime, creator)
            select obs_id, encounter_id, person_id, location_id, obs_datetime, creator
              from obs
             where voided = 0
               and concept_id =
                    (select concept_id from concept_name
                      where name like 'Complications at delivery set' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and encounter_id IN
                    (select encounter_id from encounter
                      where encounter_type =
                                (select encounter_type_id from encounter_type where name like 'MCH Delivery'));

            -- Create obsgroup; Use accession number temporarily to hold the complications obs_id
            insert into obs
                (encounter_id, person_id, location_id, obs_datetime, creator,
                 concept_id, comments, accession_number, date_created, uuid)
            select encounter_id, person_id, location_id, obs_datetime, creator,
                   (select concept_id from concept_name
                     where name like 'Visit Diagnoses' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   'delivery diagnosis obsgroup',
                   obs_id, now(), uuid()
              from obs
             where voided = 0
               and concept_id =
                    (select concept_id from concept_name
                      where name like 'Complications at delivery set' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and encounter_id IN
                    (select encounter_id from encounter
                      where encounter_type =
                                (select encounter_type_id from encounter_type where name like 'MCH Delivery'));

            -- Add obsgroup id to the temporary table
            update temp_delivery, obs
               set temp_delivery.obs_group_id = obs.obs_id
             where obs.voided = 0
               and obs.comments = 'delivery diagnosis obsgroup'
               and temp_delivery.complication_obs_id = obs.accession_number;

            -- Add obsgroup id to obs table
            update temp_delivery, obs
               set obs.obs_group_id = temp_delivery.obs_group_id
             where obs.voided = 0
               and temp_delivery.complication_obs_id = obs.obs_id;

            -- Delivery (create a new diagnosis order obs)
            insert into obs
                (person_id, concept_id, value_coded, encounter_id, obs_datetime,
                 location_id, obs_group_id, comments, creator, date_created, uuid)
            select person_id,
                (select concept_id from concept_name
                  where name like 'Diagnosis order' and locale = 'en' and locale_preferred = 1 and voided = 0),
                (select concept_id from concept_name
                  where name like 'Secondary' and locale = 'en' and locale_preferred = 1 and voided = 0),
                encounter_id, obs_datetime, location_id, obs_group_id, 'delivery inserted secondary order', creator, now(), uuid()
             from temp_delivery;

            -- Delivery (change the concept for the diagnosis)
            UPDATE obs
               set concept_id =
                    (select concept_id from concept_name
                      where name like 'Diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   comments = (select Concat('delivery diagnosis updated ',sysdate()) from dual)
            where concept_id =
                    (select concept_id from concept_name
                      where name like 'Complications at delivery set' and locale = 'en' and locale_preferred = 1 and voided = 0)
              and voided = 0
              and encounter_id IN
                    (select encounter_id from encounter
                      where encounter_type =
                                (select encounter_type_id from encounter_type where name like 'MCH Delivery'));

            -- Cleanup temp trash for delivery obsgroups
            update obs
               set accession_number = NULL
             where obs_id IN (select obs_group_id from temp_delivery);

            drop table if exists temp_delivery;

        </sql>
    </changeSet>


    <changeSet id="20190712-migrate-type2dm-to-type2dm-oral-agents" author="ball">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                select count(*) from global_property gp
                 cross join concept_name cn
                 where gp.property_value like '%haiti%'
                   and gp.property ='layout.address.format'
                   and cn.name like 'Type 2 diabetes on oral hypoglycemic agents only'
                   and cn.locale = 'en'
                   and cn.locale_preferred = 1
                   and cn.voided = 0;
            </sqlCheck>
        </preConditions>
        <comment>
            UHM-3923 Migrate NCD Diabetes Type 2 to Type 2 on oral agents
        </comment>
        <sql>
            -- Diabetes Type 2 (change the concept to Diabetes Type 2 Insulin-dependent)
            update obs
               set value_coded =
                    (select concept_id from concept_name
                      where name like 'Type 2 diabetes on oral hypoglycemic agents only'
                        and locale = 'en' and locale_preferred = 1 and voided = 0),
                   comments = (select Concat('changed from type 2 diabetes',sysdate()) from dual)
             where value_coded =
                    (select distinct(concept_id) from concept_name
                      where name like 'Type 2 diabetes' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and concept_id =
                    (select distinct(concept_id) from concept_name
                      where name like 'Type of diabetes diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and encounter_id IN
                    (select encounter_id from encounter
                      where encounter_type IN
                            (select encounter_type_id from encounter_type where name like 'NCD%'))
               and voided = 0;
        </sql>

    </changeSet>

    <changeSet id="20190712-migrate-ncd-dm-diagnoses-to-construct" author="ball">
        <validCheckSum>3:b224b550cafdf7f484726dff15eb583a</validCheckSum>
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                select count(*) from global_property gp
                 where gp.property_value like '%haiti%'
                   and gp.property ='layout.address.format';
            </sqlCheck>
        </preConditions>
        <comment>
            UHM-3863 Migrate NCD Diabetes diagnoses to diagnoses construct
        </comment>
        <sql>
            -- NCD Diagnoses (create obsgroup and migrate data)
            drop table if exists temp_ncd_diagnosis;

            create table temp_ncd_diagnosis (
                id INT not null auto_increment primary key,
                encounter_id int(11) not NULL,
                person_id int(11) not NULL,
                location_id int(11) not NULL,
                ncd_dx_obs_id int(11) not NULL,
                obs_group_id int(11) default NULL,
                obs_datetime datetime default NULL,
                creator int(11) not NULL
            );

            -- Add diabetes dx data to temporary table
            insert into temp_ncd_diagnosis
                (ncd_dx_obs_id, encounter_id, person_id, location_id, obs_datetime, creator)
            select obs_id, encounter_id, person_id, location_id, obs_datetime, creator
              from obs
             where voided = 0
               and concept_id =
                        (select concept_id from concept_name
                          where name like 'Type of diabetes diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and encounter_id IN
                        (select encounter_id from encounter
                          where encounter_type IN
                                    (select encounter_type_id from encounter_type where name like 'NCD%'));

            -- Create obsgroup; Use obs_group_id on the parent obs temporarily to hold the ncd diagnosis child obs_id
            insert into obs
                (encounter_id, person_id, location_id, obs_datetime, creator,
                 concept_id, comments, obs_group_id, date_created, uuid)
            select encounter_id, person_id, location_id, obs_datetime, creator,
                   (select concept_id from concept_name
                     where name like 'Visit Diagnoses' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   'ncd diagnosis obsgroup',
                   obs_id, now(), uuid()
              from obs
             where voided = 0
               and concept_id =
                        (select concept_id from concept_name
                          where name like 'Type of diabetes diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and encounter_id IN
                        (select encounter_id from encounter
                          where encounter_type IN
                                    (select encounter_type_id from encounter_type where name like 'NCD%'));

            -- Add obsgroup id to the temporary table
            update temp_ncd_diagnosis, obs
               set temp_ncd_diagnosis.obs_group_id = obs.obs_id, obs.obs_group_id = null
             where obs.voided = 0
               and obs.comments = 'ncd diagnosis obsgroup'
               and temp_ncd_diagnosis.ncd_dx_obs_id = obs.obs_group_id;

            -- Add obsgroup id to obs table
            update temp_ncd_diagnosis, obs
               set obs.obs_group_id = temp_ncd_diagnosis.obs_group_id
             where obs.voided = 0
               and temp_ncd_diagnosis.ncd_dx_obs_id = obs.obs_id;

            -- NCD dx order (create a new diagnosis order obs)
            insert into obs
                (person_id, concept_id, value_coded, encounter_id, obs_datetime,
                 location_id, obs_group_id, comments, creator, date_created, uuid)
            select person_id,
                   (select concept_id from concept_name
                     where name like 'Diagnosis order' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   (select concept_id from concept_name
                     where name like 'Secondary' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   encounter_id, obs_datetime, location_id, obs_group_id, 'ncd dx inserted secondary order', creator, now(), uuid()
              from temp_ncd_diagnosis;

            -- NCD dx (change the concept for the diagnosis)
            update obs
               set concept_id =
                    (select concept_id from concept_name
                      where name like 'Diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   comments = (select Concat('ncd diagnosis updated ',sysdate()) from dual)
             where concept_id =
                    (select concept_id from concept_name
                      where name like 'Type of diabetes diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and voided = 0
               and encounter_id IN
                    (select encounter_id from encounter
                      where encounter_type IN
                                (select encounter_type_id from encounter_type where name like 'NCD%'));

            -- Cleanup temp trash for ncd dx obsgroups

            drop table if exists temp_ncd_diagnosis;
        </sql>
    </changeSet>

    <changeSet id="20190715-migrate-ncd-diagnoses-to-construct" author="ball">
        <validCheckSum>3:b47d9d18ff6b93d2539d524d751ef9ca</validCheckSum>
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                select count(*) from global_property gp
                where gp.property_value like '%haiti%'
                and gp.property ='layout.address.format';
            </sqlCheck>
        </preConditions>
        <comment>
            UHM-3863 Migrate NCD Diagnoses to diagnoses construct
        </comment>
        <sql>
            drop table if exists temp_ncd_diagnosis;

            create table temp_ncd_diagnosis (
                id INT not null auto_increment primary key,
                encounter_id int(11) not NULL,
                person_id int(11) not NULL,
                location_id int(11) not NULL,
                ncd_dx_obs_id int(11) not NULL,
                obs_group_id int(11) default NULL,
                obs_datetime datetime default NULL,
                creator int(11) not NULL
            );

            -- Add dx data to temporary table
            insert into temp_ncd_diagnosis
                (ncd_dx_obs_id, encounter_id, person_id, location_id, obs_datetime, creator)
             select obs_id, encounter_id, person_id, location_id, obs_datetime, creator
               from obs
              where voided = 0
                and concept_id =
                        (select concept_id from concept_name
                          where name like 'Diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0)
                and value_coded !=
                        (select concept_id from concept_name
                          where name like 'Other' and locale = 'en' and locale_preferred = 1 and voided = 0)
                and obs_group_id is NULL
                and encounter_id IN
                        (select encounter_id from encounter
                          where encounter_type IN
                                    (select encounter_type_id from encounter_type where name like 'NCD%'));

            -- Create obsgroup; Use obs_group_id temporarily to hold the ncd diagnosis obs_id
            insert into obs
                (encounter_id, person_id, location_id, obs_datetime, creator,
                 concept_id, comments, obs_group_id, date_created, uuid)
            select encounter_id, person_id, location_id, obs_datetime, creator,
                   (select concept_id from concept_name
                     where name like 'Visit Diagnoses' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   'ncd diagnosis obsgroup',
                   obs_id, now(), uuid()
              from obs
             where voided = 0
               and concept_id =
                        (select concept_id from concept_name
                          where name like 'Diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and value_coded !=
                        (select concept_id from concept_name
                          where name like 'Other' and locale = 'en' and locale_preferred = 1 and voided = 0)
               and obs_group_id is NULL
               and encounter_id IN
                        (select encounter_id from encounter
                          where encounter_type IN
                            (select encounter_type_id from encounter_type where name like 'NCD%'));

            -- Add obsgroup id to the temporary table
            update temp_ncd_diagnosis, obs
               set temp_ncd_diagnosis.obs_group_id = obs.obs_id, obs.obs_group_id = null
             where obs.voided = 0
               and obs.comments = 'ncd diagnosis obsgroup'
               and temp_ncd_diagnosis.ncd_dx_obs_id = obs.obs_group_id;

            -- Add obsgroup id to obs table
            update temp_ncd_diagnosis, obs
               set obs.obs_group_id = temp_ncd_diagnosis.obs_group_id,
                   obs.comments = (select Concat('ncd diagnosis updated ',sysdate()) from dual)
             where obs.voided = 0
               and temp_ncd_diagnosis.ncd_dx_obs_id = obs.obs_id
               and obs.concept_id =
                        (select concept_id from concept_name
                          where name like 'Diagnosis' and locale = 'en' and locale_preferred = 1 and voided = 0);

            -- NCD dx order (create a new diagnosis order obs)
            insert into obs
                (person_id, concept_id, value_coded,
                 encounter_id, obs_datetime,
                 location_id, obs_group_id, comments, creator, date_created, uuid)
            select person_id,
                   (select concept_id from concept_name
                     where name like 'Diagnosis order' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   (select concept_id from concept_name
                     where name like 'Secondary' and locale = 'en' and locale_preferred = 1 and voided = 0),
                   encounter_id, obs_datetime, location_id, obs_group_id, 'ncd dx inserted secondary order', creator, now(), uuid()
             from temp_ncd_diagnosis;

            drop table if exists temp_ncd_diagnosis;
        </sql>
    </changeSet>

    <changeSet id="20190731-update-glucose-concept-name" author="ball">

        <comment>
            UHM-3974 Update the glucose concept name
        </comment>

        <sql>
            -- Update english names
            -- Prefer Serum Glucose
            update concept_name
               set locale_preferred = 1
             where uuid = '3e12cb7a-26fe-102b-80cb-0017a47871b2';
            -- Synonym Glucose
            update concept_name
               set locale_preferred = 0
             where uuid = '7bf57a65-9d0e-4a36-a646-926c724d6ad3';

            -- Update French names
            -- Prefer Glucose serique
            update concept_name
               set locale_preferred = 1, concept_name_type = 'FULLY_SPECIFIED'
             where uuid = 'f5b04bb6-d5db-102d-ad2a-000c29c2a5d7';
            -- Synonym Glycemie
            update concept_name
               set locale_preferred = 0, concept_name_type = NULL
             where uuid = '3e12ccec-26fe-102b-80cb-0017a47871b2';
        </sql>
    </changeSet>

</databaseChangeLog>

